3/30/2016:
Features:
+ Added grabbing: new output, if over 0.5, activates and pulls together a nearby target bot. If pulled too far, the 
  target can break free. Only one target at the moment
  * Should be saved and loaded, but isn't currently. Would require the saving of agent ID's, and that's Pandora's box at the moment,
    as no id is ever saved
+ Added jaws: new output, when changed rapidly from low to high, activates and "chomps" on agents immediately in front.
  NOTE: deathcause is same as spike deaths, "Killed by a Murder"
+ Healthloss of a parent through assexual reproduction is related to (parent radius)/(mean radius). A settings.h var exists to
  change the impact, currently a bot with a radius of 10 will lose 0.325 health with assexual reproduction
+ Bots will suffer damage when populations are large via "Oxygen", simple size()/TOOMANYBOTS factor. Death cause: "LackOf Oxygen"
+ New Input: Random. Value with randn applied on every tick
- Bots now will give health to any bot they want, not just lower-health bots
- Brains when being mutated will no longer skip any more mutations if a major mutation occurs. Let natural selection have options
- Removed spike startle. Not really relevant any longer since agents have physical bodies now and can't pass through each other

= Hazard dropped by bots faster (rate of 0.001->0.0015)
= Meat is much shorter lived but much more fulfilling 
= Meat dropped by slow-kill deaths reduced to 25%. Counter added to give grace period for fresh-kill deaths after spikings,
  durration set by FRESHKILLTIME
= In effort to bring variety locally, collision reaction force increased. The way I see it, weak collisions allow agents to overlap,
  too far and they kill each other. We need to let them bump into each other and mingle more.
= Fixed ZeroHealth bug. Bots would be kept afloat just above 0 health because fruit intake occured after hazard loss, keeping
  bots killed by hazard (health forced = 0) alive, barely.
= Fixed bug where newborn bots were not using parent's angles to correctly place them behind parents. Note, this will not apply
  to agents driving backwards. Babies will ALWAYS be spawned on the side opposite the parent's spike
= Fixed long-standing bug with agent movement. At top speed, wheels would not drive agents straight, but rather at an oblique angle

Simulation:
+ Added selected agent display reports of jumping and grabbing status
+ following is now related to scalemult, so at closer zooms the follow target will be closer to the middle of the window
+ Added a key, 'q', that instantly zooms and centers the world so that everything can be seen.
+ Added new visualization: Crossable. Will highlight bots that can perform sexual reproduction with selected agent, by making
  all perfect relatives light blue, other relatives blue, all cousins purple, and all non-relatives grey
+ Newborn babies will show a small grey event
+ Report now contains RandomSeed: picks a random bot, and a random brain box, and reports its seed counter.
+ Toppled report.txt fprintf function into multiple. Easier to navigate code

Old Saves:
BROKEN! On account of new features for bots - grabbing and jaws,new input - random, and changed physical constants - REACTPOWER and
 FRESHKILLTIME, old saves will not preserve the situation. With regard to freshkill, old saves are not compatable



12/31/15
Bots:
+ New sensors: A cell variation of smell. Counts values of cells nearby and reports the ratio to total cells sensed.
  Four "scents" available to bots: Fruit, Meat, Hazard, and Water
+ New brain box feature: seed. Counts the number of sucesses (reproduction events) a single box has experienced. Only
  effects sexual reproduction, where comparing the seed counts of the same box in the two parents will change the
  probability of which parent's box is coppied. Gives massive value to sexual reproduction, as brain boxes which have
  suffered a detrimental mutation are much more quickly weeded out
+ New output: Sexual Projection. A bot with this output will be more likely to take part in sexual reproduction with others
+ Num Babies trait finally introduced. Now, the number of children produced from reproduction events is under the control
  of the agents. An inheritable and mutable integer that is never allowed to go below 1
+ Agents now keep track of how they died. Strings are stored that describe their death cause, which are collected by the
  world and reported both in the report.txt and, if the agent was selected, to the output window.
+ New selected bot outputs: Bots will report to the output window when they give birth and how many children they had,
  and their cause of death
+ Agents with large radii have purpose: larger agents move less in collisions, and take less damage if over-pressured
+ Two-way wheels enabled once more: Now agents have four wheel outputs, left backwards and forwards, and right backwards
  and forwards. NOTE: IMEDITATELY after enabling these, tribes were spotted once more! DO NOT REMOVE THIS FEATURE!!!
+ Newborn bots are born grey, to guarentee vision activation by parents, neighbors
+ Newborn bots and their mothers will be given extra health according to mother's -repcounter/reprate. Mothers take MINMOMHEALTH damage

- Eyes sensing cells feature removed. Final judgement: the effects of eyes being over-saturated are too damaging for
  too little of an evolutionary factor. Code still present, but must be re-worked in if desired. May later make a
  setting to determine if it's used.
- "selected" tag removed. Selected agent now handled by world.

= Code for producing random agents improved. Lungs will be adapted for terrain spawned in, temp_pref will reflect
  spawned y-axis location, and custom positions are now available (preparation for point-click agent adding functionality).
= Jump code: Output now forced to be a change-sensitive output, making jump a less common, and more challenging solution. 
  Change requires min age for bot jump capability: only agents older than 0 can jump. (init 0->val change sensitive bug)
= Reproduction re-written: now the mother's health will always be split amongst the mother and children
= Sexual reproduction separated from health sharing. Instead uses new output, Sexual Projection
= Give change: now agents with give can specify the range, according to (output-0.5)*2 of FOOD_SHARE-DISTANCE
= Agent brains changed: Global Weight range decreased, Weight range increased, code for reprodction changed
= Stomach changes: Worst any stomach type can do to other intakes is 50% reduction, instead of 100%. Omnivores should
  be more plentiful
= Collision changes: agents that collided and died will now output full meat value
= Reworked metabolism slightly: now effects the max speed bots can travel at, and should never be mutated to zero

Sim:
+ Plant food now grows when hazard exists on same cell, settings.h variable can fine tune the rate
+ New stats on bots: killed, hits, and death cause. Records number of kills and number of attacks this bot has commited,
  and death cause is collected by the world and stored in report.txt, resets every epoch
+ New select options:
  Follow most aggressive: targets bot with greatest cumulative of its kills + 1/4 its attacks
  Follow most social: targets bot with highest "give" output + 1/4 its sexual projection
+ Report updates:
 + Added tracking fruit numbers (counts those cells with >50% fruit)
 + Added tracking of Terrestrial and Aquatic bot counts and top generations of those
 + Added death count
 + Added death causes, along with counts of each. Has such stucture that some extra work is needed to sort and graph the
   data, but a simple Excel function(s) can do the trick. Has provided VERY valuable data
 + Introduced Random Generation: Picks a random agent and reports its gencount. Actually very useful in figuring out
   generation paths of different species, also the approximate generations of the dominant species 
 = Cleaned up report code, including a bug where fruigvores and carnivores top gens were mixed up
+ "Closed" state of world now persists with saving and loading
+ Pressing the "/" key will now insta-heal selected agent

= New code optimizations (performance of 300 fps again on an i3 processor)
= Follow & agent selection code altered and updated majorly:
 + Agents can be automatically selected via the old "following" types, and a toggle option deterimines if it's followed
 + Internal changes: the world now keeps an agent ID value stored (or -1 if no agent selected)
 + Adjusted code to take zoom scale into account, minor selection distance limit increase at far zooms
 + Changes to manual selection / automatic selection interaction. Any manually selected agent will overide any auto
   selection chosen. Likewise, any re-activated autoselection will override the manual selection
 = Fixed deletion of first selected agent bug
= Mouse click-and-drag no longer counts as a mouse click. Click actions now only performed at button release
= Fixed bug with agents children counters only counting reproduction events, now reports physical children
= Fixed long standing bug with init fruit decaying b/c it wasn't spawned on plant-filled cells
= Modified terrain generation code for accuracy of settings.h vars (OCEANPERCENT now actually generates that % of water)
= New enums make Layers, Select, Visual, Input, Output, and Stomach code easier to understand and make changes to
= Hazard damage greatly increased, now poses a significant threat to established species (and circle drivers)
= Other food balancing changes. I'm probably starting to repeat old values now...
= Meta-mutation rates adjusted: more likely for chance-of-mutations to change, much less change in strength-of-mutations
= Fixed messy code structure with ReadWrite.cpp
= Cleaned up using new helpers.h capm instead of capCell. capm takes 3 arguments, a, low, and high, and returns value
  between low and high if "a" is not between them, "a" otherwise.

* GLview's modcounter gets stuck after loading. Will investigate

Graphics:
+ New Static display: renders things in a fixed frame with respect to the window. Now includes the following:
 + New Selected Agent Overlay: displays stats and values of selected agent, including health, lung type, giving,
   # children, mutrates, radius, # kills, stomach type, temp preference, land preference, and MORE
 + New debug infos: counts of reported food and hazard cells, current world and GLview modcounters. Room for expansion
 + Added visual crosshair indicating the center of the window and directional axises
 = Text informers (relating "closed", "Following", and "Paused" statuses) have been moved to static display
+ New volume indicators: when "Volume" agent visual mode is active, expanding "pings" indicating the volume (and future
  frequency) of the agent's voice are displayed. Are entirely graphical, no extra sim processing time used on fast mode.

= Transparency functionality added. Agent events, eye lines of sight, outlines, spikes and boost now utilize blur effects
 = Altered rendering of bot outlines: now always renders at close zoom, but blurs to the bot visualization color at wide
   zoom. Makes visual data from agents more meaningful and easy to see globally.
 = Agent spikes, eyes, and ears now blur away when zoomed out
= Fixed window resizing and mouse-world interactions being incorrect. Now fully supports any kind of window resizing!
= Fixed Species display color coding to actually display possibly meaningful colors. Now, almost every randomly generated
  species can be seen to be visually distinct, and major deviations between subspecies will be visualized.
= Improved code of drawing agents for more utility. Now supports custom positional rendering, instead of strictly bot x&y.
= Prettied up the agent report display: shows more stats and values. Mostly meaningless now with the Agent Overlay.
= Fixed bug with text printing where a different font specified in the method arguement wasn't used (perhaps code was
  intended to be written to handle exceptions where incorrect fonts were passed?)

Saves:
+ IMPORTANT: All saves will be placed in and loaded from a "saves" folder, which if does not exist will be made by the
  program. When loading and saving it is NOT required that the folder/directory be specified. Again, NOT required.
+ Report.txt will be saved with the world to a new text file in the "saves" folder. If a saved report already exists by
  the same name, checking is done to see if it is a continuation of the saved world. If it is, any new report.txt data
  generated will be appended. Otherwise, the report file is replaced entirely.
+ "numbabies" agent tag, backwards compatable (old saves can be loaded), but uniqueness-breaking (random values upon load)
+ "seed" brain box tag, backwards compatable and uniqueness-preserving (constant, non-sim-breaking values upon load)
+ "closed" world tag, backwards compatable and uniqueness-breaking (always FALSE from old saves)

- "selected" tag removed. Old selections will not be preserved from old saves, and will no longer be loaded or saved
- "killed" tag removed. The flag is always set to FALSE before writing, so it's pointless to store

= Old saves are still compatable, but may not work as intended (numbabies, closed world)

* NOTE FOR NON-WINDOWS USERS: you are going to have to implement some other form of folder generation and checking than
  that which is implimented currently in main.cpp.



12/25/13 changes
+ Added menu window via GLUI; gui integration achieved. Many options and live variables migrated there.
  Current list of all live variables:
  * Fast Mode (disable draw) and speed
  * Pausing and close/open world toggling
  * Layer drawing mode selection
  * Agent drawing mode selection
  * Following mode selection
  * Debug toggle
  All live variables are still togglable via key commands and right-click context menu (some)
  Loading, saving, and starting new worlds are available as well, along with input and alert windows
+ Terrian generator implemented. Creates land masses and oceans. Mapped and displayed via cell layers. (oceans: 0,
  land: 1. May add other value possibilities for heightmaps). Settings.h vars control number of continents and 
  percent of world which is water.
+ Lungs: inheritable, mutable bot constant, determines what environment (land, water, or both) the bot can
  survive in. New indicator next to bot visualizes this variable.
+ New brain mutation: Input Swap: two inputs for one brain box are switched. Moderate chance.
+ Now tracking number of children from each bot
+ New Follow type: Most Productive: the bot which has had the most number of children over its lifetime will be followed
  * Known bug: this is not working fully yet and only follows oldest agents. Will fix in next update

= Plant spread now directly related to fruit presence, which now requires 1/4 plant instead of 1/10
= Adjustments to agent's initial species and radius values (wider ranges for both)
= Giving birth no longer takes health for sexual reproduction, and 0.4 for assexual
= Give function of bots now activates only if target bot has less health than self
= Collisions are now softer and take the relative bot's radii into account (smaller bots get pushed more)
= Changes to brain (fewer weights will be -1 or 1 at init, dampening more likely to be seen, a lot less injury
  by activity, and increased percent of inputs set to actual sence inputs to 40%)
= Max generation following will no longer select zero generation agents, meaning if there are only zero gen
  agents, the focus will not change
= Meat decays again
= Fixes to order of operations in loading world, specifically the extra initial tick and success message
= Tweeks to mutation rates, boost, hazard layer mechanics
= Poison/hazard hurts bots more (several runs were observed with localized specitation after this change!!!)
= Food balancing
= Moved graph and infos to better fit 1366x768 res screens



7/22/13 changes
+ Hearing and Sound sensors split, now each bot has NUMEARS of these sensor pairs (called ears), 
  and each has a variable angle location on each bot. Ears drawn on bots as small tan circles
+ Health lost for having lots of actively changing boxes in the brain
+ Health lost if physics corrects for less than a TOOCLOSE (settings const) distance
+ New brain synapse type: memory; causes box to skip changing if conn value > 0.5, effectively 
  nulifying any changes to the box's value
+ Added constants for modifying simulation interface (zoom and snap speeds)
+ Added liveMutate function to brain; allows changes to brains after bot conception
+ Added variable bot radius: is inheritable, ranges between 2.5 and 17.5 for random agents (mean= 10, configurable)
+ Agents are no longer able to countdown repcounter while health is below mothering health theshold (default 0.65, configurable)
+ Count of agents with spikes now reported (no graph as yet)
+ Agents now gain repcounter bonus if at full health
+ Agents have sepparate "eyesensecellmod" and "eyesensebotsmod" vars for eyes
+ Aesthetics:
  Added Agent visual toggle; can hide agents, or color them according to stomach type, temperature discomfort, or sound volume
  Agents get white event when they are selected.
  Changes regarding spike, eye, and ear rendering related to bot radius, to allow for better looking custom radii bots.
  other color scheme changes

- Removed species count reporting (code still present)
- Version number checking for loading/saving discontinued
- Collisions no longer flag agents as spiked. Was creating too many sitting colonies.

= Temperature layer changed into fruit layer. Fruit will be a new source of food which populates randomly like old food, but is only 
  available on cells with plant present. Code for consumption by bots not yet implemented.
= Bot's clock inputs fixed; was suddenly snapping to zero at modcounter reset, so current epoch is now
  taken into account as well.
= Reduced health loss from reproduction
= Edited jump code to force bots to have a grace period between jumps. Fixed jumping jump landing bug
= Extended spike length now based on settings var
= Meat no longer decays
= Carnivores now get same bonus as herbivores for moving slowly over their food
= Omnivores now should have a harder time eating
= Agent speed factor for food consumption switched from average to max of the speeds of the two wheels
= Metabolism instead only effects rate of repcounter countdown and healthloss. REPRATE setting adjusted appropriately.
= Daughter bots should now spawn behind their mothers more.
= Plant food can only spread from 3/4 or more full cells (was 1/2)
= Agents which run at full speed will not get any food from any source.
= Code opimization
= Balancing:
  Food rates. Trying to get balance between not enough bots and explosive colonies.
  Mutation chances and magnitudes of brain boxes and agent traits tweaked



11/7/12 changes
+ Added Hazard layer: instant hazards which last a random number of ticks before disapearing, slowly increases under live bots and damages them.
+ Added Jump: output that sets a counter for "height" that slowly decreases over time. Jumping bots cannot be attacked, cannot change direction
  or angle, and cannot interact with cells (plants, meat, or hazards). Automatically locks in boost if active when jump is activated.
  Jumping bots do not interact physically with other bots, but can still attack others
+ Added saving and loading of hazard layer, and of jump "height" of bots
+ Added meat count, hazard count, and hybrid bots, omnivore bots, and max omnivore generation count to report
+ Code for blood sensor detecting meat in layer form added, but currently unused
+ Added stomach type multiplier for dead bot to meat conversion. Carnivores will give only half of what an otherwise identical herbivore
  would give. Prevents self-sufficient carnivores
+ Added Debug Mode: reports mouse events, visually displays what the selected agent can see with all eyes. Can be toggled via menu
- Eye FOV are limited to 180 degrees; anything greater doesn't make sense and starts giving bots unfair advantages
- Age counts removed from reports
- Metabolism no longer effects health loss
= Cell saving and loading changed; no longer requires more reading variables, but now takes up to 3x the number of lines from previous versions.
  Old saves are incompatable
= Adjusted init health of spawned bots to increase turnover rate and give more of a challenge to species
= Reduced "jumpiness" of "follow healthiest agent" function
= Changed weight adjusting code (again). Hopefully this time the bots will exhibit some learning behavior
= Fixed incorrect save data bug, -1 selected agent id bug, and other tune ups to ReadWrite module
= Fixed species reporting. A species is counted in reporting only when there are 3 or more members
= Fixed food overpopulation of edges bug
= Continued plant, meat, and hazard balancing
* Notable bug: bots turn instantly when jump= 0, making the action look ugly. Needs work
* FPS has been reduced to less than 200 at program init, settings as is, on an intel i3, 2.1GHz Windows machine. This is annoying



6/26/12 changes
+ Added player control of agents: use "w,a,s,d" keys to control the selected agent. Is toggleable ("w,a,s,d" keys can activate, 
  menu option can toggle to either state)
  w: increase speed; s: decrease speed; a: increase right, decrease left (turn left); d: increase left, decrease right (turn right)
+ Agent color now changes a fraction of the difference between its current color and the respective output; makes for smoother color changes
+ Added new output: Stimulus - if greater than 0.5, will allow decay and strengthening of brain box weights
+ New cell layers: plants, meat, temp are constructed, agents intereact only with plant and meat layers. More can be easily programed
+ Added meat layer. Feeds carnivores, with high yield, exponential decay
+ Added temperature layer: calculated at world init, shows where "heat" is
+ Closed world setting also disables FOODADDFREQ from adding food; only FOODMIN can add food if triggered
+ Added species agent variable, to reduce intermixing of species. All random bots have ids between -10 and 
  10, to induce beneficial crossovers.
+ Agent selection now toggleable by clicking on the selected agent to deselect it (toggling selection will also disable player control)
+ defined LAYERS: will effect the construct of cells array and the layer toggle
+ Eyes now can see meat and plant food in the world
+ Follow healthiest agent now an option, most useful when no established species exist yet.
+ Added smooth tracking of agents when follow is enabled, meaning quick screen snaps are a thing of the past
+ Saving/loading additions: save-over existing file check and saving & loading of screen location and selected agent

- Removed carnivore kill-sharing. Dead agents are now directly converted to the meat layer
- Removed food sensor input
- Removed add agents keystrokes. Adding agents now can only be triggered by right-click menu
- Removed edge-based scroll

= Loading/saving now completely modularized.
= Changed drawfood toggle to layer integer, allowing different cell layers to be displayed. Can be changed with the 'k' and 'l' keys
= Fixed temperature sensor to correctly involve agents' y-axis, rather than their x-axis, locations
= Modified proximity formulas
= Increased DIST
= Changed interface: must left-click nearer to bots to select them, left-click-drag moves the scene, and resets follow to zero if moved quickly enough
= Changes as required for new layer system to loading and saving code
= Fixed loading agents "inheriting" traits from previously loaded agents bug
= Fixed spacebar input (and direction inputs) bugs
= Fixed negative weights being set to 0 bug
= Nearly half of all boxes have weights that have a decent chance of being at -1 or 1, to better facititate equal value and
  difference connections
= Agent age report on selection changed to report its species id
= Some code opimizations

5/23/12 changes
+ More graph features: total count (black) and hybrid count (blue) plots, erases on world reset & load.
+ Fixed the crossover function. Re-introduced sexual reproduction; works off same code for asexual reproduction
+ Camera pan keystrokes now arrow keys, instead of "w,a,s,d" keys, which I plan to change into selected bot control
+ Food spread (seeding) range now settings.h variable
+ Improved and expandable cells array: replaces food layer, boasts a possible 3 additional layers (can be expanded)
  cells[LAYER][CELL_X][CELL_Y]; for [LAYER]: 0= plant food (meat, poison, water/land, light, temperature layers also possible with very little coding)
- Removed reprate agent variable. All agents must eat REPRATE amount of food in order to reproduce.
= Brain adjustments. Reactivated box gb - global weights (were disabled in some previous version)
= Metabolism now has primary control over agent's reproduction rate. Also, now effects rate of health loss (higher metabolism -> faster health loss)
= Changes to save-load function: remove reprate val, improved version checking (old versions may not behave as expected)
= Relocation of menu creating; look for glCreateMenu() function in GLView.cpp
= "Toggle closed world" menu option now represents correct open or closed state in-menu
= Rewrote player input code to something much more professional...
= Even more food balancing changes (including allowing any non-zero food cell to seed)

4/15/12 changes
+ Physics collision correction incorperated
+ Added metabolism agent variable, effects rate of food to repcounter, and meat to repcounter. Range: 0 -> 4
+ Added basic world save function
+ Added basic world load function
+ Last OUTPUTSIZE boxes are no longer forced to have connections with zero weights
+ Increased chance of change-sensitive conns (5% -> 10%)
+ Food spread now has a range of three cells (not yet adjustable via settings.h)
- Removed eye proximity inputs, merged with the colors
= Changes to mutation chances
= Changes to MLP Brain inner workings and variable ranges
= Fixed follow selected agent feature so that death of selected agent does not result in snaping to origin
= Adjusted world reset to better work with loading saved worlds.
= Further adjustment to food constants

2/15/12 changes
+ added spacebar input to bots, makes interesting yet unlikely useful behaviour changes
+ New brain output: Choice. Replaces the weight of the last connection of each box with a value in the range 0-2 based on this output. It is hoped 
  that this will lead to more complex behaviours than ever before.
+ added "follow highest generation" function, follows bot with highest gen count. NOTE: this and "follow oldest" follow the same bot in the most 
  random batches of agents.
+ food spread introduced
+ food sharing indicator changed to temperature discomfort indicator: more orange means more health being lost
= Temperature preference now more likely to match the location where a random agent is placed, to help start populations
= experimentation with a recursive weight system, where when a conn's val is above 0.6, its weight is increased. Conversely, when it's below 0.3, its
  weight is decreased, by about 0.000001 both ways
= balancing adjustments to plant food
= optimizing of code and agent loops; mostly just experimentation. 

1/13/12 changes
+ added MINFOOD constant; number of food cells with 50% MAXFOOD will never fall below this number.
+ added speed (skipdraw) report to window title
+ added new type of mutation: box copy. All attributes are copied from one box to another.
+ added David Coleman's code for hiding stats when zoomed out and custom epoch report frequency, added Anaal Nathrakh's code for closed state reporting, 
= changed/added display of total population on graph by using the cursor-line. Added a numerical display also. Shows possible change in population as well.
= Fixed follow agent and follow oldest so that the screen stays at its location when either is toggled off (no nasty jumping back to previous location)
= Fixed selecting of agents while following. Now you can select the oldest agent while following him, or select others of interest nearby!
= Fixed bugs with reporting (not clearing the file on reload, incorrect values to some fields) 

1/3/12 (GhengopelALPHA) changes
- changed process keys to allow right-click context menu. Added scroll for mouse movement near window edge. Removed right-click-move scroll ability (interference with context menu)
+ Added "delete" function: press the delete key when a bot is selected and it will be removed.
- Changed color scheme (don't like the white and gray background)
- Fixed agent selection to get correct world x&y when following
+ Added new reprate variable for bots, and is the number repcounter is reset to, with the fastest possible reprate defined by MINREPRATE. Is inherited.

1/1/2012 changes
- made many more variables per agent customizable and inheritable (such as eye sensitivity etc)
- added two more keys: 's' follows the selected agent around. 'o' follows the oldest agent around.
- number of carnivores and herbivores are now visualized on top of the world
- added a new type of brain: assembly brain, but it needs much more work. i.e. don't use

v1.3
- Fixed compilation issues on Linux
- Ported to CMake build system

v1.2 changes (released 19 January 2011):

- New Brain: DWRAON (Damped Weighted Recurrent AND/OR Network). This is better due to more continuous behavior than the old, discrete, rule based system.
- No dichotomy of herbivore/carnivore. There is a stomach specialization variable between 0,1. At 0, specialized to process plants, at 1, meat. This trait is inherited and undergoes mutation. This also supports emergence of omnivores, which can process both, to a lesser degree.
- Meat food is now only allocated when a creature dies, as opposed to when it is injured. It is distributed evenly to all nearby creatures when the kill occurs. This leads more clearly to emergence of hunting packs.
- Ability to judge health of an organism in front was added. I think of it something as a blood sensor. Essentially, it fires if something wounded is ahead. This can make agents become selective when hunting.
- More sensors were added: Two clock neurons that have time-varying activity at a some frequency that can be inherited. This is useful for introducing base activity into the brain, and also for giving agents a simple way to keep track of time, and do something at regular intervals. 
- Also, a hearing sensor was added that directly simulates sound. Agents can now shout at each other, but probably lack the capacity to temporally parse a shouting stream and create anything that resembles a non-trivial language.
- Sound generator actuator was added, which simulates creating sound and corresponds to shouting.
- Ability to share food was added. An agent can choose to give up its food to organisms around it. This potentially enables emergence of altruism: When a bot is too high in health, it may sense that there is one of its kind ahead that needs food, and choose to give it up.
