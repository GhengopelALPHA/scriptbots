;settings.cfg
;This file will be regenerated with defualt values if missing
;modify any value in this file to change constants in Scriptbots. All changes will require a reload or reset to take effect

WIDTH= 10000;  //width and height of simulation
HEIGHT= 8000;
WWIDTH= 1100;  //initial window width and height
WHEIGHT= 700;

SNAP_SPEED= 0.2; //how fast snapping to an object of interest is; 1 is instant, 0.1 is smooth, 0 is pointless
ZOOM_SPEED= 0.002; //how fast zoom actions change the magnification

	CZ= 50; //cell size in pixels, for food squares. Should divide well into Width, Height
MINFOOD= 2000; //Minimum number of food cells which must have food durring simulation. 0 = off
INITFOODDENSITY= 0.00012; //initial density of full food cells
	INITFOOD = (int) (INITFOODDENSITY*WIDTH*HEIGHT); //initial number of full food cells
INITFRUITDENSITY= 0.00008; //initial density of full fruit cells
	INITFRUIT = (int) (INITFRUITDENSITY*WIDTH*HEIGHT); //initial number of full fruit cells

NUMBOTS= 30; //initially, and minimally
ENOUGHBOTS= 500; //number of bots where we no longer seed with random spawns
TOOMANYBOTS= 1800; //number of bots at which the full NOAIR healthloss is applied

	REPORTS_PER_EPOCH = 10; // number of times to record data per epoch. 0 for off. (David Coleman)
	FRAMES_PER_EPOCH = 10000; //number of frames before epoch is incremented by 1.
	RECORD_SIZE = 200; // number of data points stored for the graph. Units is in reports, the frequency of which are defined above

	CONTINENTS= 2; //number of "continents" generated on the land layer
	OCEANPERCENT= 0.65; //decimal percent of terrain layer which will be ocean

	FRAMES_PER_DAY= 2500; //number of frames it takes for the daylight cycle to go completely around
	
GRAVITYACCEL= 0.01; //how fast a bot will "fall" after jumping [0= weightless (I don't recommend), 0.5 or more= super-gravity]
REACTPOWER= 0.13; //how strong is the restoring force between two colliding agents?
SPIKEMULT= 2; //strength of spike injury

;BOTS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ BOTS
BOTSPEED= 0.3; //fastest possible speed of agents
BOOSTSIZEMULT=2; //how much boost do agents get? when boost neuron is on
FOODTRANSFER= 0.01; //how much is transfered between two agents trading food? per iteration
MEANRADIUS=10; //average agent radius (only applies to random agents)
SPIKESPEED= 0.005; //how quickly can attack spike go up?
FRESHKILLTIME= 10; //number of ticks after a spike, collision, or bite that a bot will still drop full meat
MINMOMHEALTH=0.15; //minimum amount of health required for an agent to have a child
	MAXMETABOLISM=1.5; //agent metabolism is limited to [0,this]
REPRATE=20; //amount of food required to be consumed for an agent to reproduce
LEARNRATE= 0.001; // 0.02 (high-gen feedback) //how quickly a conn weight can change from use
MAXDEVIATION=10; //maximum difference a crossover reproducing agent will be willing to tolerate
	METAMUTRATE1= 0.002; //what is the change in MUTRATE1 and 2 on reproduction? lol
	METAMUTRATE2= 0.001;
MAXAGE=1000; //Age at which the full HEALTHLOSS_AGING amount is applied to an agent

DIST= 400; //how far can the senses can detect other bots or cells
SPIKELENGTH=30; //full spike length. MUST be less than DIST!!!
TOOCLOSE=14; //how much two agents can be overlapping before they take damage
FOOD_SHARING_DISTANCE= 60; //how far away can food be shared between bots?
SEXTING_DISTANCE= 60; //how far away can two bots sexual reproduce?
GRABBING_DISTANCE= 40; //how far away can a bot grab another? MUST be less than DIST!!!

HEALTHLOSS_WHEELS = 0.00001; //0.0 //How much health is lost for a bot driving at full speed
HEALTHLOSS_BOOSTMULT=4; //how much boost costs (set to 1 to nullify boost cost; its a multiplier)
HEALTHLOSS_BADTEMP = 0.0025; //how quickly does health drain in nonpreferred temperatures (0= disabled. 0.003 is decent value)
HEALTHLOSS_AGING = 0.0001;
HEALTHLOSS_BRAINUSE= 0.0001; //0.001 //how much health is reduced for each box in the brain being active
HEALTHLOSS_BUMP= 0.005; //how much health is lost upon collision
HEALTHLOSS_SPIKE_EXT= 0; //how much health a bot looses for extending spike
HEALTHLOSS_BADAIR= 0.01; //how much health is lost if in totally opposite environment
HEALTHLOSS_NOOXYGEN= 0.0006; //how much bots are penalized when total agents = TOOMANYBOTS, applied exponentially
HEALTHLOSS_ASSEX= 0.325; //multiplier for radius/meanradius penalty on mother for asexual reproduction
HEALTHLOSS_JAWSNAP= 0.6; //when jaws snap fully (0->1), this is the damage applied to bots in front

BRAIN_DIRECTINPUT= 0.3; //probability of random brain conns on average which will connect directly to inputs
BRAIN_DEADCONNS= 0.3; //probability of random brain conns which are "dead" (that is, weight = 0)
BRAIN_CHANGECONNS= 0.15; //probablility of random brain conns which are change sensitive
BRAIN_MEMCONN= 0.01; //probablility of random brain conns which are memory type

;LAYERS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ LAYERS
FOODINTAKE= 0.008; //how much plant food can feed an agent per tick?
FOODDECAY = 0.000005; //how much does food decay(+)/grow(-) on a cell which already has food?
FOODGROWTH= 0.0000052; //how much does food increase by on a cell with both plant and hazard? (fertilizer)
FOODWASTE= 0.0004; //0.0003 (too much) //how much food disapears if agent eats?
FOODMAX= 0.5; //how much food per cell can there be at max?
FOODADDFREQ= 250; //how often does random square get set to full food?
FOODSPREAD= 0.0001; //0.0002 speedy recovery //probability of a fruit cell seeding food to a nearby cell
FOODRANGE= 2; //distance that single cell of food can seed. in cells.

FRUITINTAKE = 0.013; //how much fruit can feed an agent per tick?
FRUITDECAY = 0.0005; //0.001 (too fast)//how much fruit decays on a cell with low plant life?
FRUITWASTE = 0.0005; //0.0008 //how much fruit disapears if agent eats?
FRUITMAX = 0.5;
FRUITADDFREQ = 6; //how often does a high-plant-food cell get set to full fruit?
FRUITREQUIRE= 0.1; //minimum plant health required for fruit to persist on the cell

MEATINTAKE= 0.1; //how much meat can feed an agent per tick?
MEATDECAY= 0.0000005; //0.000002 (not enough) //how much meat decays/grows on a cell? through MEATDECAY/[meat_present]
MEATWASTE= 0.002; // 0.0004 (lasts too long) 0.002 (not enough) //how much meat disapears if agent eats?
MEATMAX= 0.5; //how much meat per cell can there be at max?
MEATVALUE= 1; //how much meat a bot's body is worth? in range [0,1]

HAZARDFREQ= 20; //how often an instant hazard appears?
HAZARDDECAY= 0.000002; //how much non-event hazard decays/grows on a cell per tick?
HAZARDDEPOSIT= 0.0015; //how much hazard is placed by a bot per tick?
HAZARDDAMAGE= 0.018; //how much health a bot looses while on a filled hazard cell per tick?
HAZARDMAX= 0.5; //how much hazard per cell can there be at max? more than 9/10 of this qualifies as an instant hazard
	}